name: Deploy Xpensea-backend

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        id: build-image
        run: |
          docker build -t xpensea:latest .

      - name: Save Docker image
        uses: actions/upload-artifact@v3
        with:
          name: xpensea-image
          path: ./xpensea:latest

  push:
    name: Push Docker Image to ECR
    runs-on: ubuntu-latest
    needs: build

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPOSITORY: xpensea
      IMAGE_TAG: latest

    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: xpensea-image
          path: ./xpensea:latest

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag and Push Docker image
        id: tag-and-push-image
        run: |      
          docker tag xpensea:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: push

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPOSITORY: xpensea
      IMAGE_TAG: latest
      EC2_INSTANCE_IP: ${{ secrets.EC2_INSTANCE_IP }}
      SSH_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
      USERNAME: ec2-user
      PORT: 3040
      CONTAINER_NAME: XPENSEA_BACKEND

    steps:
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_INSTANCE_IP }}
          username: ${{ env.USERNAME }}
          key: ${{ env.SSH_KEY }}
          script: |
            # Refresh ECR login
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | sudo docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
            
            # Pull Docker Image
            sudo docker pull ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

            # sudo docker stop ${{ env.CONTAINER_NAME }} || true
            # sudo docker rm ${{ env.CONTAINER_NAME }} || true

            sudo docker run -d \
              -p ${{ env.PORT }}:${{ env.PORT }} \
              --name ${{ env.CONTAINER_NAME }} \
              -e ENVIRONMENT=production \
              ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
