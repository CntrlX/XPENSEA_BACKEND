name: Deploy Xpensea-backend

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCR_REPOSITORY: xpensea
      IMAGE_TAG: latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Google Cloud
        run: gcloud auth configure-docker gcr.io

      - name: Build and Push Docker image
        id: build-and-push-image
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCR_REPOSITORY: xpensea
          IMAGE_TAG: latest
        run: |
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.GCR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.GCR_REPOSITORY }}:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy to Compute Engine
    runs-on: ubuntu-latest
    needs: build

    env:
        PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCR_REPOSITORY: xpensea
        IMAGE_TAG: latest
        GCE_INSTANCE_NAME: ${{ secrets.GCE_INSTANCE_NAME }}
        GCE_ZONE: ${{ secrets.GCE_ZONE }}
        GCE_SSH_USER: ${{ secrets.GCE_SSH_USER }}
        GCE_SSH_KEY: ${{ secrets.GCE_SSH_KEY }}
        PORT: 3040
        CONTAINER_NAME: XPENSEA_BACKEND

    steps:
      - name: SSH into Compute Engine and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCE_EXTERNAL_IP }}
          username: ${{ env.GCE_SSH_USER }}
          key: ${{ secrets.GCE_SSH_KEY }}
          script: |
           # Authenticate GCR on the remote machine
           gcloud auth configure-docker gcr.io
    
           # Pull Docker Image from GCR
           docker pull gcr.io/${{ env.PROJECT_ID }}/${{ env.GCR_REPOSITORY }}:${{ env.IMAGE_TAG }}
    
            # Stop and remove the existing container if it's running
           docker-compose down || true
    
            # Rebuild and run the container with Docker Compose
            docker-compose up --build -d
    
           # Check Docker Images
           docker images
    
           # Check Docker Containers
           docker ps -a
    
           # Check Container Logs
           docker logs ${{ env.CONTAINER_NAME }}
    
