name: Deploy Xpensea-backend

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCR_REPOSITORY: xpensea
      IMAGE_TAG: latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Google Cloud
        run: gcloud auth configure-docker gcr.io

      - name: Build and Push Docker image to GCR
        id: build-and-push-image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.GCR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.GCR_REPOSITORY }}:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy to Compute Engine
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: SSH into Compute Engine and deploy
        uses: google-github-actions/ssh-compute@v1
        with:
          instance_name: ${{ secrets.GCE_INSTANCE_NAME }}
          zone: ${{ secrets.GCE_ZONE }}
          ssh_private_key: ${{ secrets.GCE_SSH_KEY }}
          user: ${{ secrets.GCE_SSH_USER }}
          command: |
            # Pull Docker Image
            sudo docker pull gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.GCR_REPOSITORY }}:${{ env.IMAGE_TAG }}

            # Stop and remove the existing container if it's running
            sudo docker stop ${{ env.CONTAINER_NAME }} || true
            sudo docker rm ${{ env.CONTAINER_NAME }} || true

            # Run the new container
            sudo docker run -d \
              -p 3040:3040 \
              --name ${{ env.CONTAINER_NAME }} \
              -e ENVIRONMENT=production \
              gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.GCR_REPOSITORY }}:${{ env.IMAGE_TAG }}
